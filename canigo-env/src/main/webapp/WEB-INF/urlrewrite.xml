<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE urlrewrite PUBLIC "-//tuckey.org//DTD UrlRewrite 2.6//EN"
        "http://tuckey.org/res/dtds/urlrewrite2.6.dtd">
<urlrewrite>
	         
	<rule>
        <note>
            The rule means that request to .*/AppJava/.* (i.e. all request with AppJava prefix)that not matches 
            pattern .*/AppJava/dwr.*, will be redirected to a new resource with the same request without 
            AppJava prefix.
        </note>        
		<condition type="request-url" operator="equal">.*/AppJava/.*</condition>
        <from>^(.*)/AppJava/(.*)$</from>
	    <to last="true">$1/$2</to>
    </rule>     

	<outbound-rule>
        <note>
        La outbound-rule especifica que quan s'invoca a response.encodeURL (o c:url si
        s'està fent servir JSTL) la url 
           /*/AppJava/*.do* 
        serà reescrita a 
           /*/AppJava/*.do*. 
        És a dir, es queda igual. Aquesta regla està pensada per a no modificar aquelles
        URLs de recursos dinàmics que ja tenen fixat el prefix AppJava.
       
        Per exemple, si la petició d'entrada és 
            /canigo-formacio/AppJava/home.do?reqCode=search
        la url reescrita serà la mateixa     
            /canigo-formacio/AppJava/home.do?reqCode=search
           
        D'altra banda, el fet de que l'atribut last estigui fixat a true fa que si aquesta
        regla s'aplica, ja no es miri la resta de reglas definides. Per tant, és important
        que aquesta sigui la primera regla a validar.	
        </note>                
        <from>^(.*)/AppJava/(.*)\.do(\Q?\E*.*)$</from>
	 <to last="true">$1/AppJava/$2.do$3</to>
    </outbound-rule>
    
    <outbound-rule>
        <note>
        La outbound-rule especifica que quan s'invoca a response.encodeURL (o c:url si
        s'està fent servir JSTL) la url 
           /*/*.do* 
        serà reescrita a 
           /*/AppJava/*.do*. 
        És a dir, s'afegeix el prefix AppJava. 
            
        Per exemple, si la petició d'entrada és 
           /canigo-formacio/home.do?reqCode=search
        la url reescrita serà 
           /canigo-formacio/AppJava/home.do?reqCode=search            
        </note>                
        <from>^/([^/]*)/(.*)\.do(\Q?\E*.*)$</from>
	 <to last="true">/$1/AppJava/$2.do$3</to>
    </outbound-rule>
    
    <outbound-rule>
       <note>
	La outbound-rule especifica que quan s'invoca a response.encodeURL (o c:url si
       s'està fent servir JSTL) la url 
             /*/AppJava/dwr/* 
       serà deixada igual. Aquesta regla està pensada per a no modificar aquelles URLs 
       de recursos gestionats pel servlet de DWR que ja tenen fixat el prefix AppJava.

       Per exemple, si la petició d'entrada és 
             /canigo-formacio/AppJava/dwr/interface/cuentas.js
       la url reescrita serà la mateixa     
             /canigo-formacio/AppJava/dwr/interface/cuentas.js
         
       D'altra banda, el fet de que l'atribut last estigui fixat a true fa que si aquesta
       regla s'aplica, ja no es miri la resta de reglas definides. Per tant, és important
       que aquesta sigui la primera regla a validar en el cas de peticions de recursos de
       DWR.	
       </note>                
        <from>^(.*)/AppJava/dwr/(.*)$</from>
	    <to last="true">$1/AppJava/dwr/$2</to>
    </outbound-rule>
    
    <outbound-rule>
      <note>
	La outbound-rule especifica que quan s'invoca a response.encodeURL (o c:url si
       s'està fent servir JSTL) la url 
           /*/dwr/* 
       serà reescrita a 
           /*/AppJava/dwr/*. 

       Per exemple, si la petició d'entrada és 
           /canigo-formacio/dwr/interface/cuentas.js
       la url reescrita serà 
           /canigo-formacio/AppJava/dwr/interface/cuentas.js            
        </note>                
        <from>^(.*)dwr(.*)$</from>
	    <to last="true">$1AppJava/dwr$2</to>
    </outbound-rule>
    
    <outbound-rule>
        <note>
	La outbound-rule especifica que quan s'invoca a response.encodeURL (o c:url si 
       s'està fent servir JSTL) la url 
             /*/j_acegi_security_check 
       serà reescrita a 
          /*/AppJava/j_acegi_security_check.             
        </note>                
        <from>^(.*)/j_acegi_(.*)$</from>
	    <to last="true">$1/AppJava/j_acegi_$2</to>
    </outbound-rule>
</urlrewrite>